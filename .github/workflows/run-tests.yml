name: PHPUnit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  schedule:
  - cron: '0 0 * * *'

jobs:
  php-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 8.1, 8.0, 7.4 ]
        hyperf: [ ^1.0, ^2.0 ]
        dependency-version: [prefer-lowest, prefer-stable, dev]
        exclude:
          - hyperf: ^1.0
            php: 8.0
          - hyperf: ^1.0
            php: 8.1
      fail-fast: false

    env:
      SW_VERSION: 'v4.8.7'

    name: Test on PHP${{ matrix.php }} - Hyperf-${{ matrix.hyperf }} - ${{ matrix.dependency-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: phpize, composer:v2
          ini-values: opcache.enable_cli=1
          coverage: none

      - name: Setup Swoole
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev
          wget https://github.com/swoole/swoole-src/archive/${SW_VERSION}.tar.gz -O swoole.tar.gz
          mkdir -p swoole
          tar -xf swoole.tar.gz -C swoole --strip-components=1
          rm swoole.tar.gz
          cd swoole
          phpize
          ./configure --enable-openssl --enable-http2 --enable-swoole-curl --enable-swoole-json
          make -j$(nproc)
          sudo make install
          sudo sh -c "echo extension=swoole > /etc/php/${{ matrix.php }}/cli/conf.d/swoole.ini"
          sudo sh -c "echo swoole.use_shortname='Off' >> /etc/php/${{ matrix.php }}/cli/conf.d/swoole.ini"
          php --ri swoole

      - name: Setup Packages
        run: |
          composer require "hyperf/di:${{ matrix.hyperf }}" --no-interaction --no-update
          composer require "hyperf/http-server:${{ matrix.hyperf }}" --no-interaction --no-update
          composer require "hyperf/config:${{ matrix.hyperf }}" --dev --no-interaction --no-update
          composer require "hyperf/testing:${{ matrix.hyperf }}" --dev --no-interaction --no-update
          composer require "hyperf/validation:${{ matrix.hyperf }}" --dev --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-progress

      - name: Run Scripts Before Test
        run: cp phpunit.xml.dist phpunit.xml

      - name: Run Test Cases
        run: |
          composer test
